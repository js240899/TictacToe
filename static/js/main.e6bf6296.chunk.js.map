{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","helper.js","index.js"],"names":["Square","value","onClick","style","className","Board","squares","map","square","i","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","xO","historyPoint","slice","current","_step","move","destination","step","ReactDom","render","document","getElementById"],"mappings":"iMAYeA,EAVA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACfC,EAAQF,EAAK,kBAAcA,GAAd,UAEnB,OAAS,yBACEG,UAAcD,EACrBD,QAAYA,EAFP,cAEqBD,EAFrB,QCWEI,EAbD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASJ,EAAZ,EAAYA,QAAZ,OAA4B,sBAClCE,UAAY,QADsB,cAElCE,EAAQC,KAAI,SAACC,EAAQC,GAAT,OAAiB,cACzB,EADyB,CAEzBR,MAAUO,EACVN,QACI,kBAAMA,EAAQO,KAHHA,MAHe,QCyD3BC,EAxDF,WACT,MAA8BC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QAAtD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACMC,ECRH,SAAyBd,GAW5B,IAVA,IAAMe,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CACnC,kBAAkBY,EAAMZ,GAAxB,GAAOc,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAInB,EAAQiB,IAAMjB,EAAQiB,KAAOjB,EAAQkB,IAAMlB,EAAQiB,KAAOjB,EAAQmB,GAClE,OAAOnB,EAAQiB,GAGvB,OAAO,KDTQG,CAAgBZ,EAAQE,IACjCW,EAAKT,EAAU,IAAM,IAgC3B,OAAS,qCAEL,kEAFK,IAGsC,cAC3C,EAD2C,CACrCZ,QAAYQ,EAAQE,GAC1Bd,QAnCgB,SAACO,GACjB,IAAMmB,EAAed,EAAQe,MAAM,EAAGb,EAAa,GAC7Cc,EAAUF,EAAaZ,GACvBV,EAAO,YAAOwB,GAEhBV,GAAUd,EAAQG,KAEtBH,EAAQG,GAAKkB,EACbZ,EAAW,GAAD,mBAAKa,GAAL,CAAmBtB,KAC7BW,EAAcW,EAAaN,QAC3BH,GAAYD,OAoBP,IAMF,sBACCd,UAAY,eADb,UAEH,gCAEA,2CAFA,IAnBAU,EAAQP,KAAI,SAACwB,EAAOC,GAChB,IAAMC,EAAcD,EAAI,sBAAkBA,GAAS,cACnD,OAAS,+BAEL,yBACO9B,QACH,kBAXZe,EADYiB,EAYaF,QAVzBb,EAAWe,EAAO,IAAM,GAFb,IAACA,GAUJ,cAE6BD,EAF7B,OAFK,MACMD,MAgBnB,OAFG,IAMG,mCACCZ,EAAS,WAAaA,EAAS,gBAAkBO,EADlD,OANH,OANE,QEpCbQ,IAASC,OAAQ,cAAE,EAAF,IAAaC,SAASC,eAAe,W","file":"static/js/main.e6bf6296.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Square = ({ value, onClick }) => {\r\n    const style = value ? `squares ${value}` : `squares`;\r\n\r\n    return ( <\r\n        button className = { style }\r\n        onClick = { onClick } > { value } <\r\n        /button>\r\n    );\r\n};\r\n\r\nexport default Square;","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nconst Board = ({ squares, onClick }) => ( <\r\n    div className = \"board\" > {\r\n        squares.map((square, i) => ( <\r\n            Square key = { i }\r\n            value = { square }\r\n            onClick = {\r\n                () => onClick(i) }\r\n            />\r\n        ))\r\n    } <\r\n    /div>\r\n);\r\n\r\nexport default Board;","import React, { useState } from \"react\";\r\nimport { calculateWinner } from \"../helper\";\r\nimport Board from \"./Board\";\r\n\r\nconst Game = () => {\r\n    const [history, setHistory] = useState([Array(9).fill(null)]);\r\n    const [stepNumber, setStepNumber] = useState(0);\r\n    const [xIsNext, setXisNext] = useState(true);\r\n    const winner = calculateWinner(history[stepNumber]);\r\n    const xO = xIsNext ? \"X\" : \"O\";\r\n\r\n    const handleClick = (i) => {\r\n        const historyPoint = history.slice(0, stepNumber + 1);\r\n        const current = historyPoint[stepNumber];\r\n        const squares = [...current];\r\n        // return if won or occupied\r\n        if (winner || squares[i]) return;\r\n        // select square\r\n        squares[i] = xO;\r\n        setHistory([...historyPoint, squares]);\r\n        setStepNumber(historyPoint.length);\r\n        setXisNext(!xIsNext);\r\n    };\r\n\r\n    const jumpTo = (step) => {\r\n        setStepNumber(step);\r\n        setXisNext(step % 2 === 0);\r\n    };\r\n\r\n    const renderMoves = () =>\r\n        history.map((_step, move) => {\r\n            const destination = move ? `Go to move #${move}` : \"Go to Start\";\r\n            return ( <\r\n                li key = { move } >\r\n                <\r\n                button onClick = {\r\n                    () => jumpTo(move) } > { destination } < /button> <\r\n                /li>\r\n            );\r\n        });\r\n\r\n    return ( <\r\n        >\r\n        <\r\n        h1 > React Tic Tac Toe - With Hooks < /h1> <\r\n        Board squares = { history[stepNumber] }\r\n        onClick = { handleClick }\r\n        /> <\r\n        div className = \"info-wrapper\" >\r\n        <\r\n        div >\r\n        <\r\n        h3 > History < /h3> { renderMoves() } <\r\n        /div> <\r\n        h3 > { winner ? \"Winner: \" + winner : \"Next Player: \" + xO } < /h3> <\r\n        /div> <\r\n        />\r\n    );\r\n};\r\n\r\nexport default Game;","export function calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./components/Game\";\n\nReactDom.render( < Game / > , document.getElementById(\"root\"));"],"sourceRoot":""}